# 首先更改这些
owner: Iuleoo # GitHub 用户名
repo: Upptime # GitHub 仓库名称

#下边写的时候一定注意代码的缩进让，“-” 都在同一个竖线上，“name”和“url”也都在同一个竖线上，层次不齐的代码高几率直接报错
sites:
  - name: Google
    url: https://www.google.com
  - name: Wikipedia
    url: https://zh.wikipedia.org
  - name: 鸭鸭梨
    url: https://www.yayal.cc
  - name: Cloudflare DNS V4
    url: 1.1.1.1
    port: 53
    check: "tcp-ping"

status-website:
  # 添加您的自定义域名，若没有域名请删除 cname 行
  # 若未使用自定义域名，请取消注释 baseUrl 行并在该处填写您的仓库名称
  cname: upptime.yayal.cc
  # baseUrl: /your-repo-name
  logoUrl: https://raw.githubusercontent.com/upptime/upptime.js.org/master/static/img/icon.svg
  name: Upptime
  introTitle: "**Upptime** is the open-source uptime monitor and status page, powered entirely by GitHub."
  introMessage: This is a sample status page which uses **real-time** data from our [GitHub repository](https://github.com/upptime/upptime). No server required — just GitHub Actions, Issues, and Pages. [**Get your own for free**](https://github.com/upptime/upptime)
  navbar:
    - title: Status
      href: /
    - title: GitHub
      href: https://github.com/$OWNER/$REPO

# Upptime 的功能不仅限于监控，还可设置通知提醒、分配事务处理等
# 完整配置说明详见官方文档： https://upptime.js.org/docs/configuration

i18n:
  activeIncidents: 当前事件
  allSystemsOperational: 所有系统运行正常
  incidentReport: "事件 #$NUMBER 追踪 →"
  activeIncidentSummary: Opened at $DATE 更新 $POSTS 动态
  incidentTitle: 事件 $NUMBER 详情
  incidentDetails: 事件追踪
  incidentFixed: 已解决
  incidentOngoing: 处理中
  incidentOpenedAt: 发生时间
  incidentClosedAt: 解决时间
  incidentViewOnGitHub: 前往 GitHub 关注动态
  incidentCommentSummary:  $DATE 由 $AUTHOR 发布
  incidentBack: ← 查看所有事件
  pastIncidents: 已解决事件
  pastIncidentsResolved: $MINUTES 分钟解决，产生 $POSTS 条记录
  liveStatus: 服务状态看板
  overallUptime: "服务可用率: $UPTIME"
  overallUptimeTitle: 服务可用率
  averageResponseTime: "平均响应: $TIMEms"
  averageResponseTimeTitle: 接口响应
  sevelDayResponseTime: 7日响应趋势
  responseTimeMs: 响应时长（毫秒）
  up: 正常
  down: 中断
  degraded: 性能下降
  ms: 毫秒
  loading: 加载中
  navGitHub: GitHub
  footer: 本页面 [开源托管于]($REPO), 基于 [Upptime](https://upptime.js.org) 构建
  rateLimitExceededTitle: 访问频率受限
  rateLimitExceededIntro: 您已达到每小时访问上限，请稍候重试或绑定 GitHub 令牌继续访问。
	rateLimitExceededWhatDoesErrorMean: 为何出现此提示？
	rateLimitExceededErrorMeaning: 因使用 GitHub 接口获取数据，每个 IP 每小时限访问 60 次。
	rateLimitExceededErrorHowCanFix: 如何恢复访问？
	rateLimitExceededErrorFix: 等待 1 小时自动恢复，或绑定个人令牌可提升至每小时 5,000 次。
	rateLimitExceededGeneratePAT: 获取个人令牌指南。
	rateLimitExceededHasSet: 您已绑定访问令牌。
	rateLimitExceededRemoveToken: 解除绑定
	rateLimitExceededGitHubPAT: GitHub 访问令牌
	rateLimitExceededCopyPastePAT: 输入您的令牌
	rateLimitExceededSaveToken: 保存设置
	errorTitle: 数据加载失败
	errorIntro: 获取最新状态时出现异常。
	errorText: 建议稍后刷新重试。
	errorHome: 返回主页
	pastScheduledMaintenance: 维护记录
	scheduledMaintenance: 计划性维护
	scheduledMaintenanceSummaryStarted: 维护进行中 $DATE 开始，持续 $DURATION 分钟
	scheduledMaintenanceSummaryStarts: 维护预告 $DATE 开始，预计 $DURATION 分钟
	startedAt: 开始于
	startsAt: 计划于
	duration: 时长
	durationMin: $DURATION 分钟
	incidentCompleted: 维护完成
	incidentScheduled: 维护预告
	duration24H: 24小时
	duration7D: 7天
	duration30D: 30天
	duration1Y: 1年
	durationAll: 全部时段
	locale: zh-CN
